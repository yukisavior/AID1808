git的使用
    代码协同管理工具:
        1.防止代码丢失,做代码备份
        2.做代码的版本管理,创建多个版本或者节点,在多半本之间切换
        3.可以将代码在多人之间简单的传输共享
        4.可以方便多人协同开发,开辟各自分支和分支管理
    什么是git
        git是一个开源的分布式版本控制系统,可以高效的管理大小项目
        分布式:
            git
            每个节点关系平等,都保存完整代码,节点之间相互推送或者下载代码.工作方式多样
        集中式:
            svn
            有明确的中央服务器统一管理代码,每个节点将代码上传中央服务器或者从中央服务器下载.逻辑简单
    git特点
        1.git可以管理各种文件.特别是代码项目多在linux系统中使用
        2.是开源系统,是唯一可以操作github的管理的工具
        3.git是分布式管理,不同于集中式,这也是和svn最大的差别
        4.git可以脱网操作,传输速度更快
        5.git的安全性很强,有全球唯一的commit的版本号
        6.git分支管理很强大,可以方便很多人协同工作
    git安装
        sudo apt-get install git 
    git config
    配置级别
        1.系统中所有用户的均使用的配置
            git config --system
            配置文件: /etc/gitconfig
            配置git用户
            sudo git config --system user.name Tedu
        2.当前用户的所用项目均使用的配置
            git config --global
            配置文件: ~/.gitconfig
            配置用户邮箱:
            sudo git config --global user.mail tareba@tedu.cn
        3.只在当前项目中使用的配置
            命令:
                git config (命令要在git项目文件夹中执行)
            配置文件:
                project/.git/config
            配置编译器
                git config core.editor vscode
    git基本概念
        工作区:
            通过自己的主机操作的git目录
        暂存区:
            用来记录你工作的行为,作为暂时保存
        本地仓库:
            本地用来备份同步工作区内容的区域
        远程仓库:
            其它主机的git仓库
    git基本操作命令
        初始化仓库
            git init
            初始化仓库后产生.git目录为git管理目录,初始化仓库的目录中的内容即可使用git管理
        
        查看工作分支状态
            git status
            默认工作分支为master,可以通过创建新的分支切换
        
        文件提交到暂存区
            git add [file]
            1.可以一次提交多个内容,中间用空格隔开
            2.提交的内容可以是文件也可以是目录
            3.如果想将当前目录下所有内容都提交也可以使用*表示